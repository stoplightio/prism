// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`graphFacade createFilesystemNode() httpOperations should return filtered nodes 1`] = `
Array [
  Object {
    "deprecated": undefined,
    "description": "",
    "id": "?http-operation-id?",
    "iid": "addPet",
    "method": "post",
    "path": "/pet",
    "request": Object {
      "body": Object {
        "contents": Array [
          Object {
            "encodings": Array [],
            "examples": Array [],
            "mediaType": "application/json",
            "schema": Object {
              "properties": Object {
                "category": Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": Object {
                    "name": "Category",
                  },
                },
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "name": Object {
                  "example": "doggie",
                  "type": "string",
                },
                "photoUrls": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "type": "array",
                  "xml": Object {
                    "name": "photoUrl",
                    "wrapped": true,
                  },
                },
                "status": Object {
                  "description": "pet status in the store",
                  "enum": Array [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "tags": Object {
                  "items": Object {
                    "properties": Object {
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Tag",
                    },
                  },
                  "type": "array",
                  "xml": Object {
                    "name": "tag",
                    "wrapped": true,
                  },
                },
              },
              "required": Array [
                "name",
                "photoUrls",
              ],
              "type": "object",
              "xml": Object {
                "name": "Pet",
              },
            },
          },
          Object {
            "encodings": Array [],
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": Object {
              "properties": Object {
                "category": Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": Object {
                    "name": "Category",
                  },
                },
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "name": Object {
                  "example": "doggie",
                  "type": "string",
                },
                "photoUrls": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "type": "array",
                  "xml": Object {
                    "name": "photoUrl",
                    "wrapped": true,
                  },
                },
                "status": Object {
                  "description": "pet status in the store",
                  "enum": Array [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "tags": Object {
                  "items": Object {
                    "properties": Object {
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Tag",
                    },
                  },
                  "type": "array",
                  "xml": Object {
                    "name": "tag",
                    "wrapped": true,
                  },
                },
              },
              "required": Array [
                "name",
                "photoUrls",
              ],
              "type": "object",
              "xml": Object {
                "name": "Pet",
              },
            },
          },
        ],
        "description": "Pet object that needs to be added to the store",
        "required": true,
      },
      "cookie": Array [],
      "headers": Array [],
      "path": Array [],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "405",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Invalid input",
        "headers": Array [],
      },
    ],
    "security": Array [
      Object {
        "description": undefined,
        "flows": Object {
          "implicit": Object {
            "authorizationUrl": "https://petstore.swagger.io/oauth/dialog",
            "scopes": Array [
              Object {
                "write:pets": "modify pets in your account",
              },
              Object {
                "read:pets": "read your pets",
              },
            ],
          },
        },
        "type": "oauth2",
      },
    ],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Add a new pet to the store",
    "tags": Array [
      Object {
        "name": "pet",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "",
    "id": "?http-operation-id?",
    "iid": "updatePet",
    "method": "put",
    "path": "/pet",
    "request": Object {
      "body": Object {
        "contents": Array [
          Object {
            "encodings": Array [],
            "examples": Array [],
            "mediaType": "application/json",
            "schema": Object {
              "properties": Object {
                "category": Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": Object {
                    "name": "Category",
                  },
                },
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "name": Object {
                  "example": "doggie",
                  "type": "string",
                },
                "photoUrls": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "type": "array",
                  "xml": Object {
                    "name": "photoUrl",
                    "wrapped": true,
                  },
                },
                "status": Object {
                  "description": "pet status in the store",
                  "enum": Array [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "tags": Object {
                  "items": Object {
                    "properties": Object {
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Tag",
                    },
                  },
                  "type": "array",
                  "xml": Object {
                    "name": "tag",
                    "wrapped": true,
                  },
                },
              },
              "required": Array [
                "name",
                "photoUrls",
              ],
              "type": "object",
              "xml": Object {
                "name": "Pet",
              },
            },
          },
          Object {
            "encodings": Array [],
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": Object {
              "properties": Object {
                "category": Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": Object {
                    "name": "Category",
                  },
                },
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "name": Object {
                  "example": "doggie",
                  "type": "string",
                },
                "photoUrls": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "type": "array",
                  "xml": Object {
                    "name": "photoUrl",
                    "wrapped": true,
                  },
                },
                "status": Object {
                  "description": "pet status in the store",
                  "enum": Array [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "tags": Object {
                  "items": Object {
                    "properties": Object {
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Tag",
                    },
                  },
                  "type": "array",
                  "xml": Object {
                    "name": "tag",
                    "wrapped": true,
                  },
                },
              },
              "required": Array [
                "name",
                "photoUrls",
              ],
              "type": "object",
              "xml": Object {
                "name": "Pet",
              },
            },
          },
        ],
        "description": "Pet object that needs to be added to the store",
        "required": true,
      },
      "cookie": Array [],
      "headers": Array [],
      "path": Array [],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "400",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Invalid ID supplied",
        "headers": Array [],
      },
      Object {
        "code": "404",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Pet not found",
        "headers": Array [],
      },
      Object {
        "code": "405",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Validation exception",
        "headers": Array [],
      },
    ],
    "security": Array [
      Object {
        "description": undefined,
        "flows": Object {
          "implicit": Object {
            "authorizationUrl": "https://petstore.swagger.io/oauth/dialog",
            "scopes": Array [
              Object {
                "write:pets": "modify pets in your account",
              },
              Object {
                "read:pets": "read your pets",
              },
            ],
          },
        },
        "type": "oauth2",
      },
    ],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Update an existing pet",
    "tags": Array [
      Object {
        "name": "pet",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "Multiple status values can be provided with comma separated strings",
    "id": "?http-operation-id?",
    "iid": "findPetsByStatus",
    "method": "get",
    "path": "/pet/findByStatus",
    "request": Object {
      "cookie": Array [],
      "headers": Array [],
      "path": Array [],
      "query": Array [
        Object {
          "allowEmptyValue": undefined,
          "contents": Array [
            Object {
              "encodings": Array [],
              "examples": Array [],
              "mediaType": "*",
              "schema": Object {
                "collectionFormat": "multi",
                "items": Object {
                  "default": "available",
                  "enum": Array [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "name": "status",
                "type": "array",
              },
            },
          ],
          "description": "Status values that need to be considered for filter",
          "name": "status",
          "required": true,
          "style": "form",
        },
      ],
    },
    "responses": Array [
      Object {
        "code": "200",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": Object {
              "items": Object {
                "properties": Object {
                  "category": Object {
                    "properties": Object {
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Category",
                    },
                  },
                  "id": Object {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": Object {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": Object {
                    "items": Object {
                      "type": "string",
                    },
                    "type": "array",
                    "xml": Object {
                      "name": "photoUrl",
                      "wrapped": true,
                    },
                  },
                  "status": Object {
                    "description": "pet status in the store",
                    "enum": Array [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": Object {
                    "items": Object {
                      "properties": Object {
                        "id": Object {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": Object {
                          "type": "string",
                        },
                      },
                      "type": "object",
                      "xml": Object {
                        "name": "Tag",
                      },
                    },
                    "type": "array",
                    "xml": Object {
                      "name": "tag",
                      "wrapped": true,
                    },
                  },
                },
                "required": Array [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": Object {
                  "name": "Pet",
                },
              },
              "type": "array",
            },
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": Object {
              "items": Object {
                "properties": Object {
                  "category": Object {
                    "properties": Object {
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Category",
                    },
                  },
                  "id": Object {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": Object {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": Object {
                    "items": Object {
                      "type": "string",
                    },
                    "type": "array",
                    "xml": Object {
                      "name": "photoUrl",
                      "wrapped": true,
                    },
                  },
                  "status": Object {
                    "description": "pet status in the store",
                    "enum": Array [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": Object {
                    "items": Object {
                      "properties": Object {
                        "id": Object {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": Object {
                          "type": "string",
                        },
                      },
                      "type": "object",
                      "xml": Object {
                        "name": "Tag",
                      },
                    },
                    "type": "array",
                    "xml": Object {
                      "name": "tag",
                      "wrapped": true,
                    },
                  },
                },
                "required": Array [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": Object {
                  "name": "Pet",
                },
              },
              "type": "array",
            },
          },
        ],
        "description": "successful operation",
        "headers": Array [],
      },
      Object {
        "code": "400",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Invalid status value",
        "headers": Array [],
      },
    ],
    "security": Array [
      Object {
        "description": undefined,
        "flows": Object {
          "implicit": Object {
            "authorizationUrl": "https://petstore.swagger.io/oauth/dialog",
            "scopes": Array [
              Object {
                "write:pets": "modify pets in your account",
              },
              Object {
                "read:pets": "read your pets",
              },
            ],
          },
        },
        "type": "oauth2",
      },
    ],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Finds Pets by status",
    "tags": Array [
      Object {
        "name": "pet",
      },
    ],
  },
  Object {
    "deprecated": true,
    "description": "Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
    "id": "?http-operation-id?",
    "iid": "findPetsByTags",
    "method": "get",
    "path": "/pet/findByTags",
    "request": Object {
      "cookie": Array [],
      "headers": Array [],
      "path": Array [],
      "query": Array [
        Object {
          "allowEmptyValue": undefined,
          "contents": Array [
            Object {
              "encodings": Array [],
              "examples": Array [],
              "mediaType": "*",
              "schema": Object {
                "collectionFormat": "multi",
                "items": Object {
                  "type": "string",
                },
                "name": "tags",
                "type": "array",
              },
            },
          ],
          "description": "Tags to filter by",
          "name": "tags",
          "required": true,
          "style": "form",
        },
      ],
    },
    "responses": Array [
      Object {
        "code": "200",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": Object {
              "items": Object {
                "properties": Object {
                  "category": Object {
                    "properties": Object {
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Category",
                    },
                  },
                  "id": Object {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": Object {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": Object {
                    "items": Object {
                      "type": "string",
                    },
                    "type": "array",
                    "xml": Object {
                      "name": "photoUrl",
                      "wrapped": true,
                    },
                  },
                  "status": Object {
                    "description": "pet status in the store",
                    "enum": Array [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": Object {
                    "items": Object {
                      "properties": Object {
                        "id": Object {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": Object {
                          "type": "string",
                        },
                      },
                      "type": "object",
                      "xml": Object {
                        "name": "Tag",
                      },
                    },
                    "type": "array",
                    "xml": Object {
                      "name": "tag",
                      "wrapped": true,
                    },
                  },
                },
                "required": Array [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": Object {
                  "name": "Pet",
                },
              },
              "type": "array",
            },
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": Object {
              "items": Object {
                "properties": Object {
                  "category": Object {
                    "properties": Object {
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Category",
                    },
                  },
                  "id": Object {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": Object {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": Object {
                    "items": Object {
                      "type": "string",
                    },
                    "type": "array",
                    "xml": Object {
                      "name": "photoUrl",
                      "wrapped": true,
                    },
                  },
                  "status": Object {
                    "description": "pet status in the store",
                    "enum": Array [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": Object {
                    "items": Object {
                      "properties": Object {
                        "id": Object {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": Object {
                          "type": "string",
                        },
                      },
                      "type": "object",
                      "xml": Object {
                        "name": "Tag",
                      },
                    },
                    "type": "array",
                    "xml": Object {
                      "name": "tag",
                      "wrapped": true,
                    },
                  },
                },
                "required": Array [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": Object {
                  "name": "Pet",
                },
              },
              "type": "array",
            },
          },
        ],
        "description": "successful operation",
        "headers": Array [],
      },
      Object {
        "code": "400",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Invalid tag value",
        "headers": Array [],
      },
    ],
    "security": Array [
      Object {
        "description": undefined,
        "flows": Object {
          "implicit": Object {
            "authorizationUrl": "https://petstore.swagger.io/oauth/dialog",
            "scopes": Array [
              Object {
                "write:pets": "modify pets in your account",
              },
              Object {
                "read:pets": "read your pets",
              },
            ],
          },
        },
        "type": "oauth2",
      },
    ],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Finds Pets by tags",
    "tags": Array [
      Object {
        "name": "pet",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "Returns a single pet",
    "id": "?http-operation-id?",
    "iid": "getPetById",
    "method": "get",
    "path": "/pet/{petId}",
    "request": Object {
      "cookie": Array [],
      "headers": Array [],
      "path": Array [
        Object {
          "contents": Array [
            Object {
              "encodings": Array [],
              "examples": Array [],
              "mediaType": "*",
              "schema": Object {
                "format": "int64",
                "name": "petId",
                "type": "integer",
              },
            },
          ],
          "description": "ID of pet to return",
          "name": "petId",
          "required": true,
          "style": "simple",
        },
      ],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "200",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": Object {
              "properties": Object {
                "category": Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": Object {
                    "name": "Category",
                  },
                },
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "name": Object {
                  "example": "doggie",
                  "type": "string",
                },
                "photoUrls": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "type": "array",
                  "xml": Object {
                    "name": "photoUrl",
                    "wrapped": true,
                  },
                },
                "status": Object {
                  "description": "pet status in the store",
                  "enum": Array [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "tags": Object {
                  "items": Object {
                    "properties": Object {
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Tag",
                    },
                  },
                  "type": "array",
                  "xml": Object {
                    "name": "tag",
                    "wrapped": true,
                  },
                },
              },
              "required": Array [
                "name",
                "photoUrls",
              ],
              "type": "object",
              "xml": Object {
                "name": "Pet",
              },
            },
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": Object {
              "properties": Object {
                "category": Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": Object {
                    "name": "Category",
                  },
                },
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "name": Object {
                  "example": "doggie",
                  "type": "string",
                },
                "photoUrls": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "type": "array",
                  "xml": Object {
                    "name": "photoUrl",
                    "wrapped": true,
                  },
                },
                "status": Object {
                  "description": "pet status in the store",
                  "enum": Array [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "tags": Object {
                  "items": Object {
                    "properties": Object {
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Tag",
                    },
                  },
                  "type": "array",
                  "xml": Object {
                    "name": "tag",
                    "wrapped": true,
                  },
                },
              },
              "required": Array [
                "name",
                "photoUrls",
              ],
              "type": "object",
              "xml": Object {
                "name": "Pet",
              },
            },
          },
        ],
        "description": "successful operation",
        "headers": Array [],
      },
      Object {
        "code": "400",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Invalid ID supplied",
        "headers": Array [],
      },
      Object {
        "code": "404",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Pet not found",
        "headers": Array [],
      },
    ],
    "security": Array [
      Object {
        "description": undefined,
        "in": "header",
        "name": "api_key",
        "type": "apiKey",
      },
    ],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Find pet by ID",
    "tags": Array [
      Object {
        "name": "pet",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "",
    "id": "?http-operation-id?",
    "iid": "updatePetWithForm",
    "method": "post",
    "path": "/pet/{petId}",
    "request": Object {
      "body": Object {
        "allowEmptyValue": undefined,
        "contents": Array [
          Object {
            "encodings": Array [
              Object {
                "headers": Array [],
                "property": "name",
                "style": "form",
              },
              Object {
                "headers": Array [],
                "property": "status",
                "style": "form",
              },
            ],
            "examples": Array [],
            "mediaType": "application/x-www-form-urlencoded",
            "schema": Object {
              "properties": Object {
                "name": Object {
                  "description": "Updated name of the pet",
                  "type": "string",
                },
                "status": Object {
                  "description": "Updated status of the pet",
                  "type": "string",
                },
              },
              "required": Array [],
              "type": "object",
            },
          },
        ],
      },
      "cookie": Array [],
      "headers": Array [],
      "path": Array [
        Object {
          "contents": Array [
            Object {
              "encodings": Array [],
              "examples": Array [],
              "mediaType": "application/x-www-form-urlencoded",
              "schema": Object {
                "format": "int64",
                "name": "petId",
                "type": "integer",
              },
            },
          ],
          "description": "ID of pet that needs to be updated",
          "name": "petId",
          "required": true,
          "style": "simple",
        },
      ],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "405",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Invalid input",
        "headers": Array [],
      },
    ],
    "security": Array [
      Object {
        "description": undefined,
        "flows": Object {
          "implicit": Object {
            "authorizationUrl": "https://petstore.swagger.io/oauth/dialog",
            "scopes": Array [
              Object {
                "write:pets": "modify pets in your account",
              },
              Object {
                "read:pets": "read your pets",
              },
            ],
          },
        },
        "type": "oauth2",
      },
    ],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Updates a pet in the store with form data",
    "tags": Array [
      Object {
        "name": "pet",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "",
    "id": "?http-operation-id?",
    "iid": "deletePet",
    "method": "delete",
    "path": "/pet/{petId}",
    "request": Object {
      "cookie": Array [],
      "headers": Array [
        Object {
          "contents": Array [
            Object {
              "encodings": Array [],
              "examples": Array [],
              "mediaType": "*",
              "schema": Object {
                "in": "header",
                "name": "api_key",
                "required": false,
                "type": "string",
              },
            },
          ],
          "description": undefined,
          "name": "api_key",
          "required": false,
          "style": "simple",
        },
      ],
      "path": Array [
        Object {
          "contents": Array [
            Object {
              "encodings": Array [],
              "examples": Array [],
              "mediaType": "*",
              "schema": Object {
                "format": "int64",
                "name": "petId",
                "type": "integer",
              },
            },
          ],
          "description": "Pet id to delete",
          "name": "petId",
          "required": true,
          "style": "simple",
        },
      ],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "400",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Invalid ID supplied",
        "headers": Array [],
      },
      Object {
        "code": "404",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Pet not found",
        "headers": Array [],
      },
    ],
    "security": Array [
      Object {
        "description": undefined,
        "flows": Object {
          "implicit": Object {
            "authorizationUrl": "https://petstore.swagger.io/oauth/dialog",
            "scopes": Array [
              Object {
                "write:pets": "modify pets in your account",
              },
              Object {
                "read:pets": "read your pets",
              },
            ],
          },
        },
        "type": "oauth2",
      },
    ],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Deletes a pet",
    "tags": Array [
      Object {
        "name": "pet",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "",
    "id": "?http-operation-id?",
    "iid": "uploadFile",
    "method": "post",
    "path": "/pet/{petId}/uploadImage",
    "request": Object {
      "body": Object {
        "allowEmptyValue": undefined,
        "contents": Array [
          Object {
            "encodings": Array [
              Object {
                "headers": Array [],
                "property": "additionalMetadata",
                "style": "form",
              },
              Object {
                "headers": Array [],
                "property": "file",
                "style": "form",
              },
            ],
            "examples": Array [],
            "mediaType": "multipart/form-data",
            "schema": Object {
              "properties": Object {
                "additionalMetadata": Object {
                  "description": "Additional data to pass to server",
                  "type": "string",
                },
                "file": Object {
                  "description": "file to upload",
                  "type": "file",
                },
              },
              "required": Array [],
              "type": "object",
            },
          },
        ],
      },
      "cookie": Array [],
      "headers": Array [],
      "path": Array [
        Object {
          "contents": Array [
            Object {
              "encodings": Array [],
              "examples": Array [],
              "mediaType": "multipart/form-data",
              "schema": Object {
                "format": "int64",
                "name": "petId",
                "type": "integer",
              },
            },
          ],
          "description": "ID of pet to update",
          "name": "petId",
          "required": true,
          "style": "simple",
        },
      ],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "200",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": Object {
              "properties": Object {
                "code": Object {
                  "format": "int32",
                  "type": "integer",
                },
                "message": Object {
                  "type": "string",
                },
                "type": Object {
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
        ],
        "description": "successful operation",
        "headers": Array [],
      },
    ],
    "security": Array [
      Object {
        "description": undefined,
        "flows": Object {
          "implicit": Object {
            "authorizationUrl": "https://petstore.swagger.io/oauth/dialog",
            "scopes": Array [
              Object {
                "write:pets": "modify pets in your account",
              },
              Object {
                "read:pets": "read your pets",
              },
            ],
          },
        },
        "type": "oauth2",
      },
    ],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "uploads an image",
    "tags": Array [
      Object {
        "name": "pet",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "Returns a map of status codes to quantities",
    "id": "?http-operation-id?",
    "iid": "getInventory",
    "method": "get",
    "path": "/store/inventory",
    "request": Object {
      "cookie": Array [],
      "headers": Array [],
      "path": Array [],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "200",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": Object {
              "additionalProperties": Object {
                "format": "int32",
                "type": "integer",
              },
              "type": "object",
            },
          },
        ],
        "description": "successful operation",
        "headers": Array [],
      },
    ],
    "security": Array [
      Object {
        "description": undefined,
        "in": "header",
        "name": "api_key",
        "type": "apiKey",
      },
    ],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Returns pet inventories by status",
    "tags": Array [
      Object {
        "name": "store",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "",
    "id": "?http-operation-id?",
    "iid": "placeOrder",
    "method": "post",
    "path": "/store/order",
    "request": Object {
      "body": Object {
        "contents": Array [
          Object {
            "encodings": Array [],
            "examples": Array [],
            "mediaType": "*",
            "schema": Object {
              "properties": Object {
                "complete": Object {
                  "default": false,
                  "type": "boolean",
                },
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": Object {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": Object {
                  "format": "date-time",
                  "type": "string",
                },
                "status": Object {
                  "description": "Order Status",
                  "enum": Array [
                    "placed",
                    "approved",
                    "delivered",
                  ],
                  "type": "string",
                },
              },
              "type": "object",
              "xml": Object {
                "name": "Order",
              },
            },
          },
        ],
        "description": "order placed for purchasing the pet",
        "required": true,
      },
      "cookie": Array [],
      "headers": Array [],
      "path": Array [],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "200",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": Object {
              "properties": Object {
                "complete": Object {
                  "default": false,
                  "type": "boolean",
                },
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": Object {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": Object {
                  "format": "date-time",
                  "type": "string",
                },
                "status": Object {
                  "description": "Order Status",
                  "enum": Array [
                    "placed",
                    "approved",
                    "delivered",
                  ],
                  "type": "string",
                },
              },
              "type": "object",
              "xml": Object {
                "name": "Order",
              },
            },
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": Object {
              "properties": Object {
                "complete": Object {
                  "default": false,
                  "type": "boolean",
                },
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": Object {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": Object {
                  "format": "date-time",
                  "type": "string",
                },
                "status": Object {
                  "description": "Order Status",
                  "enum": Array [
                    "placed",
                    "approved",
                    "delivered",
                  ],
                  "type": "string",
                },
              },
              "type": "object",
              "xml": Object {
                "name": "Order",
              },
            },
          },
        ],
        "description": "successful operation",
        "headers": Array [],
      },
      Object {
        "code": "400",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Invalid Order",
        "headers": Array [],
      },
    ],
    "security": Array [],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Place an order for a pet",
    "tags": Array [
      Object {
        "name": "store",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "id": "?http-operation-id?",
    "iid": "getOrderById",
    "method": "get",
    "path": "/store/order/{orderId}",
    "request": Object {
      "cookie": Array [],
      "headers": Array [],
      "path": Array [
        Object {
          "contents": Array [
            Object {
              "encodings": Array [],
              "examples": Array [],
              "mediaType": "*",
              "schema": Object {
                "format": "int64",
                "maximum": 10,
                "minimum": 1,
                "name": "orderId",
                "type": "integer",
              },
            },
          ],
          "description": "ID of pet that needs to be fetched",
          "name": "orderId",
          "required": true,
          "style": "simple",
        },
      ],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "200",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": Object {
              "properties": Object {
                "complete": Object {
                  "default": false,
                  "type": "boolean",
                },
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": Object {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": Object {
                  "format": "date-time",
                  "type": "string",
                },
                "status": Object {
                  "description": "Order Status",
                  "enum": Array [
                    "placed",
                    "approved",
                    "delivered",
                  ],
                  "type": "string",
                },
              },
              "type": "object",
              "xml": Object {
                "name": "Order",
              },
            },
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": Object {
              "properties": Object {
                "complete": Object {
                  "default": false,
                  "type": "boolean",
                },
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": Object {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": Object {
                  "format": "date-time",
                  "type": "string",
                },
                "status": Object {
                  "description": "Order Status",
                  "enum": Array [
                    "placed",
                    "approved",
                    "delivered",
                  ],
                  "type": "string",
                },
              },
              "type": "object",
              "xml": Object {
                "name": "Order",
              },
            },
          },
        ],
        "description": "successful operation",
        "headers": Array [],
      },
      Object {
        "code": "400",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Invalid ID supplied",
        "headers": Array [],
      },
      Object {
        "code": "404",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Order not found",
        "headers": Array [],
      },
    ],
    "security": Array [],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Find purchase order by ID",
    "tags": Array [
      Object {
        "name": "store",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
    "id": "?http-operation-id?",
    "iid": "deleteOrder",
    "method": "delete",
    "path": "/store/order/{orderId}",
    "request": Object {
      "cookie": Array [],
      "headers": Array [],
      "path": Array [
        Object {
          "contents": Array [
            Object {
              "encodings": Array [],
              "examples": Array [],
              "mediaType": "*",
              "schema": Object {
                "format": "int64",
                "minimum": 1,
                "name": "orderId",
                "type": "integer",
              },
            },
          ],
          "description": "ID of the order that needs to be deleted",
          "name": "orderId",
          "required": true,
          "style": "simple",
        },
      ],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "400",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Invalid ID supplied",
        "headers": Array [],
      },
      Object {
        "code": "404",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Order not found",
        "headers": Array [],
      },
    ],
    "security": Array [],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Delete purchase order by ID",
    "tags": Array [
      Object {
        "name": "store",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "This can only be done by the logged in user.",
    "id": "?http-operation-id?",
    "iid": "createUser",
    "method": "post",
    "path": "/user",
    "request": Object {
      "body": Object {
        "contents": Array [
          Object {
            "encodings": Array [],
            "examples": Array [],
            "mediaType": "*",
            "schema": Object {
              "properties": Object {
                "email": Object {
                  "type": "string",
                },
                "firstName": Object {
                  "type": "string",
                },
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "lastName": Object {
                  "type": "string",
                },
                "password": Object {
                  "type": "string",
                },
                "phone": Object {
                  "type": "string",
                },
                "userStatus": Object {
                  "description": "User Status",
                  "format": "int32",
                  "type": "integer",
                },
                "username": Object {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": Object {
                "name": "User",
              },
            },
          },
        ],
        "description": "Created user object",
        "required": true,
      },
      "cookie": Array [],
      "headers": Array [],
      "path": Array [],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "default",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "successful operation",
        "headers": Array [],
      },
    ],
    "security": Array [],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Create user",
    "tags": Array [
      Object {
        "name": "user",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "",
    "id": "?http-operation-id?",
    "iid": "createUsersWithArrayInput",
    "method": "post",
    "path": "/user/createWithArray",
    "request": Object {
      "body": Object {
        "contents": Array [
          Object {
            "encodings": Array [],
            "examples": Array [],
            "mediaType": "*",
            "schema": Object {
              "items": Object {
                "properties": Object {
                  "email": Object {
                    "type": "string",
                  },
                  "firstName": Object {
                    "type": "string",
                  },
                  "id": Object {
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": Object {
                    "type": "string",
                  },
                  "password": Object {
                    "type": "string",
                  },
                  "phone": Object {
                    "type": "string",
                  },
                  "userStatus": Object {
                    "description": "User Status",
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": Object {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": Object {
                  "name": "User",
                },
              },
              "type": "array",
            },
          },
        ],
        "description": "List of user object",
        "required": true,
      },
      "cookie": Array [],
      "headers": Array [],
      "path": Array [],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "default",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "successful operation",
        "headers": Array [],
      },
    ],
    "security": Array [],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Creates list of users with given input array",
    "tags": Array [
      Object {
        "name": "user",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "",
    "id": "?http-operation-id?",
    "iid": "createUsersWithListInput",
    "method": "post",
    "path": "/user/createWithList",
    "request": Object {
      "body": Object {
        "contents": Array [
          Object {
            "encodings": Array [],
            "examples": Array [],
            "mediaType": "*",
            "schema": Object {
              "items": Object {
                "properties": Object {
                  "email": Object {
                    "type": "string",
                  },
                  "firstName": Object {
                    "type": "string",
                  },
                  "id": Object {
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": Object {
                    "type": "string",
                  },
                  "password": Object {
                    "type": "string",
                  },
                  "phone": Object {
                    "type": "string",
                  },
                  "userStatus": Object {
                    "description": "User Status",
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": Object {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": Object {
                  "name": "User",
                },
              },
              "type": "array",
            },
          },
        ],
        "description": "List of user object",
        "required": true,
      },
      "cookie": Array [],
      "headers": Array [],
      "path": Array [],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "default",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "successful operation",
        "headers": Array [],
      },
    ],
    "security": Array [],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Creates list of users with given input array",
    "tags": Array [
      Object {
        "name": "user",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "",
    "id": "?http-operation-id?",
    "iid": "loginUser",
    "method": "get",
    "path": "/user/login",
    "request": Object {
      "cookie": Array [],
      "headers": Array [],
      "path": Array [],
      "query": Array [
        Object {
          "allowEmptyValue": undefined,
          "contents": Array [
            Object {
              "encodings": Array [],
              "examples": Array [],
              "mediaType": "*",
              "schema": Object {
                "name": "username",
                "type": "string",
              },
            },
          ],
          "description": "The user name for login",
          "name": "username",
          "required": true,
          "style": "form",
        },
        Object {
          "allowEmptyValue": undefined,
          "contents": Array [
            Object {
              "encodings": Array [],
              "examples": Array [],
              "mediaType": "*",
              "schema": Object {
                "name": "password",
                "type": "string",
              },
            },
          ],
          "description": "The password for login in clear text",
          "name": "password",
          "required": true,
          "style": "form",
        },
      ],
    },
    "responses": Array [
      Object {
        "code": "200",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "description": "successful operation",
        "headers": Array [
          Object {
            "contents": Array [
              Object {
                "encodings": Array [],
                "examples": Array [],
                "mediaType": "application/xml",
                "schema": Object {
                  "description": "calls per hour allowed by the user",
                  "format": "int32",
                  "type": "integer",
                },
              },
              Object {
                "encodings": Array [],
                "examples": Array [],
                "mediaType": "application/json",
                "schema": Object {
                  "description": "calls per hour allowed by the user",
                  "format": "int32",
                  "type": "integer",
                },
              },
            ],
            "description": "calls per hour allowed by the user",
            "name": "X-Rate-Limit",
            "style": "simple",
          },
          Object {
            "contents": Array [
              Object {
                "encodings": Array [],
                "examples": Array [],
                "mediaType": "application/xml",
                "schema": Object {
                  "description": "date in UTC when token expires",
                  "format": "date-time",
                  "type": "string",
                },
              },
              Object {
                "encodings": Array [],
                "examples": Array [],
                "mediaType": "application/json",
                "schema": Object {
                  "description": "date in UTC when token expires",
                  "format": "date-time",
                  "type": "string",
                },
              },
            ],
            "description": "date in UTC when token expires",
            "name": "X-Expires-After",
            "style": "simple",
          },
        ],
      },
      Object {
        "code": "400",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Invalid username/password supplied",
        "headers": Array [],
      },
    ],
    "security": Array [],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Logs user into the system",
    "tags": Array [
      Object {
        "name": "user",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "",
    "id": "?http-operation-id?",
    "iid": "logoutUser",
    "method": "get",
    "path": "/user/logout",
    "request": Object {
      "cookie": Array [],
      "headers": Array [],
      "path": Array [],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "default",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "successful operation",
        "headers": Array [],
      },
    ],
    "security": Array [],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Logs out current logged in user session",
    "tags": Array [
      Object {
        "name": "user",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "",
    "id": "?http-operation-id?",
    "iid": "getUserByName",
    "method": "get",
    "path": "/user/{username}",
    "request": Object {
      "cookie": Array [],
      "headers": Array [],
      "path": Array [
        Object {
          "contents": Array [
            Object {
              "encodings": Array [],
              "examples": Array [],
              "mediaType": "*",
              "schema": Object {
                "name": "username",
                "type": "string",
              },
            },
          ],
          "description": "The name that needs to be fetched. Use user1 for testing. ",
          "name": "username",
          "required": true,
          "style": "simple",
        },
      ],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "201",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": Object {
              "properties": Object {
                "email": Object {
                  "type": "string",
                },
                "firstName": Object {
                  "type": "string",
                },
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "lastName": Object {
                  "type": "string",
                },
                "password": Object {
                  "type": "string",
                },
                "phone": Object {
                  "type": "string",
                },
                "userStatus": Object {
                  "description": "User Status",
                  "format": "int32",
                  "type": "integer",
                },
                "username": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "id",
                "username",
              ],
              "type": "object",
              "xml": Object {
                "name": "User",
              },
            },
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": Object {
              "properties": Object {
                "email": Object {
                  "type": "string",
                },
                "firstName": Object {
                  "type": "string",
                },
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "lastName": Object {
                  "type": "string",
                },
                "password": Object {
                  "type": "string",
                },
                "phone": Object {
                  "type": "string",
                },
                "userStatus": Object {
                  "description": "User Status",
                  "format": "int32",
                  "type": "integer",
                },
                "username": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "id",
                "username",
              ],
              "type": "object",
              "xml": Object {
                "name": "User",
              },
            },
          },
        ],
        "description": "successful operation",
        "headers": Array [],
      },
      Object {
        "code": "400",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Invalid username supplied",
        "headers": Array [],
      },
      Object {
        "code": "404",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "User not found",
        "headers": Array [],
      },
    ],
    "security": Array [],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Get user by user name",
    "tags": Array [
      Object {
        "name": "user",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "This can only be done by the logged in user.",
    "id": "?http-operation-id?",
    "iid": "updateUser",
    "method": "put",
    "path": "/user/{username}",
    "request": Object {
      "body": Object {
        "contents": Array [
          Object {
            "encodings": Array [],
            "examples": Array [],
            "mediaType": "*",
            "schema": Object {
              "properties": Object {
                "email": Object {
                  "type": "string",
                },
                "firstName": Object {
                  "type": "string",
                },
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "lastName": Object {
                  "type": "string",
                },
                "password": Object {
                  "type": "string",
                },
                "phone": Object {
                  "type": "string",
                },
                "userStatus": Object {
                  "description": "User Status",
                  "format": "int32",
                  "type": "integer",
                },
                "username": Object {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": Object {
                "name": "User",
              },
            },
          },
        ],
        "description": "Updated user object",
        "required": true,
      },
      "cookie": Array [],
      "headers": Array [],
      "path": Array [
        Object {
          "contents": Array [
            Object {
              "encodings": Array [],
              "examples": Array [],
              "mediaType": "*",
              "schema": Object {
                "name": "username",
                "type": "string",
              },
            },
          ],
          "description": "name that need to be updated",
          "name": "username",
          "required": true,
          "style": "simple",
        },
      ],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "400",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Invalid user supplied",
        "headers": Array [],
      },
      Object {
        "code": "404",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "User not found",
        "headers": Array [],
      },
    ],
    "security": Array [],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Updated user",
    "tags": Array [
      Object {
        "name": "user",
      },
    ],
  },
  Object {
    "deprecated": undefined,
    "description": "This can only be done by the logged in user.",
    "id": "?http-operation-id?",
    "iid": "deleteUser",
    "method": "delete",
    "path": "/user/{username}",
    "request": Object {
      "cookie": Array [],
      "headers": Array [],
      "path": Array [
        Object {
          "contents": Array [
            Object {
              "encodings": Array [],
              "examples": Array [],
              "mediaType": "*",
              "schema": Object {
                "name": "username",
                "type": "string",
              },
            },
          ],
          "description": "The name that needs to be deleted",
          "name": "username",
          "required": true,
          "style": "simple",
        },
      ],
      "query": Array [],
    },
    "responses": Array [
      Object {
        "code": "400",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "Invalid username supplied",
        "headers": Array [],
      },
      Object {
        "code": "404",
        "contents": Array [
          Object {
            "examples": Array [],
            "mediaType": "application/xml",
            "schema": undefined,
          },
          Object {
            "examples": Array [],
            "mediaType": "application/json",
            "schema": undefined,
          },
        ],
        "description": "User not found",
        "headers": Array [],
      },
    ],
    "security": Array [],
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "summary": "Delete user",
    "tags": Array [
      Object {
        "name": "user",
      },
    ],
  },
]
`;
