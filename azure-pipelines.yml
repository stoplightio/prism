jobs:
  - job: test
    displayName: Test
    condition: eq(variables['Build.SourceBranchName'], 'master')
    pool:
      vmImage: vs2017-win2016
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '12.x'
        displayName: 'Install Node.js'
      - powershell: |
         $ver = $env:BUILD_SOURCEBRANCH.remove(0, 10)
         Write-Host "##vso[task.setvariable variable=Tag;isOutput=true]$ver"
        displayName: 'Update version to Tag'
        name: setTag
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

      - script: yarn
        displayName: 'Install deps'

      - script: npx jest
        displayName: 'Run tests'

      - script: yarn build
        displayName: 'Build the code'

      - script: npx pkg --output ./cli-binaries/prism-cli ./packages/cli/
        displayName: 'Create binary'

      - script: yarn test.harness
        displayName: 'Run harness'

      - script: cp ./cli-binaries/prism-cli.exe $(Build.ArtifactStagingDirectory)/prism-cli-win.exe
        displayName: 'Copy binary in the special Azure directory'

      - publish: $(Build.ArtifactStagingDirectory)
        artifact: prism-cli-win.exe
  - job: publish
    variables:
      Tag: $[ dependencies.test.outputs['setTag.Tag'] ]
    dependsOn: test
    displayName: Publish binary
    condition: not(eq(coalesce(variables['Tag'], ''), ''))
    pool:
      vmImage: vs2017-win2016

    steps:
      - task: GitHubRelease@0
        inputs:
          gitHubConnection: spartacusroboticus
          action: 'edit'
          tag: variables['Build.Tag']
